CLASS Progression
	"""Iterator producing a generic progression.
	Default iterator produces the whole numbers 0, 1, 2,
	"""

	PROCESS __init__ with self and start is assigned 0
		"""Initialize current to the first value of the progression"""
		ASSIGN start to self._current

	PROCESS _advance with self
		"""Update self._current to a new value.

		This should be overridden by a subclass to customize progression.

		By convention, if current is set to None, this designates the 
		end of a finite progression.
		"""
		INCREASE self._current by 1

	PROCESS __nest__ with self
		"""Return the next element, or else raise StopIteration error."""
		IF self._current is None # our convention to end a progression
			RAISE StopIteration
		ELSE
			ASSIGN self._current to answer # record current value to return
			CALL  self._adance # advance to prepare for next time
			RETURN  answer # return the answer